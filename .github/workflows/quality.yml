name: Code Quality

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - Updating-Code-Standards
  pull_request:
    branches:
      - Updating-Code-Standards

jobs:


  run-linters:
    name: Fix and Check for Linting and Formatting Issues
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      # ESLint and Prettier must be in `package.json`
      - name: Install Node.js dependencies frontend
        working-directory: ./frontend
        run: npm ci

      - name: Install Node.js dependencies backend
        working-directory: ./backend
        run: npm ci

      - name: Fix Linting Issues Frontend
        working-directory: ./frontend
        continue-on-error: true
        run: npm run lint:fix

      - name: Fix Styling Issues Frontend
        working-directory: ./frontend
        continue-on-error: true
        run: npm run styles:fix

      - name: Fix Linting Issues Backend
        working-directory: ./backend
        continue-on-error: true
        run: npm run lint:fix

      - name: Fix Styling Issues Backend
        working-directory: ./backend
        continue-on-error: true
        run: npm run styles:fix

      - name: Check For Linting Issues Frontend
        uses: wearerequired/lint-action@v2
        with:
          eslint_dir: frontend
          eslint: true

      - name: Check for Styling Issues Frontend
        uses: wearerequired/lint-action@v2
        with:
          prettier_dir: frontend
          prettier: true

      - name: Check for Linting Issues Backend
        uses: wearerequired/lint-action@v2
        with:
          eslint_dir: backend
          eslint: true

      - name: Check for Styling Issues Backend
        uses: wearerequired/lint-action@v2
        with:
          prettier_dir: backend
          prettier: true
  run-quality:
    name: Check for Duplicate Code and Code Smell issues.
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install Node.js dependencies frontend
        working-directory: ./frontend
        run: npm ci

      - name: Install Node.js dependencies backend
        working-directory: ./backend
        run: npm ci

      - name: Check for Duplication and Code Smells Frontend
        working-directory: ./frontend
        continue-on-error: true
        run: ./node_modules/jsinspect/bin/jsinspect ./

      - name: Check for Duplication and Code Smells Backend
        working-directory: ./backend
        continue-on-error: true
        run: ./node_modules/jsinspect/bin/jsinspect ./

  run-security:
    name: Static Security Analysis using Snyk
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - name: Install Node.js dependencies frontend
        working-directory: ./frontend
        run: npm ci

      - name: Install Node.js dependencies backend
        working-directory: ./backend
        run: npm ci

      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities in frontend
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: ./frontend --sarif-file-output=./frontend/snyk.sarif
      - name: Upload result to Github Code Scanning for frontend
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./frontend/snyk.sarif